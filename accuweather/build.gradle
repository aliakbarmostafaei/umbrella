/*
 *     Copyright (C) 2020  Ali Akbar Mostafaei
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Affero General Public License as
 *     published by the Free Software Foundation, either version 3 of the
 *     License, or (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Affero General Public License for more details.
 *
 *     You should have received a copy of the GNU Affero General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: "com.android.dynamic-feature"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.sdkBuildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false
            debuggable = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(":core")
    implementation project(":app")

    kapt annotationProcessors.daggerProcessor
    implementation androidxLibraries.annotations
    implementation androidxLibraries.coreKtx
    implementation androidxLibraries.appCompat
    implementation androidxLibraries.constraintLayout
    implementation reactiveLibraries.rxJava
    implementation reactiveLibraries.rxKotlin
    implementation reactiveLibraries.rxAndroid
    implementation networkLibraries.okhttp
    implementation networkLibraries.okhttpLogger
    implementation networkLibraries.retrofit
    implementation networkLibraries.moshi
    implementation networkLibraries.retrofitMoshiConverter
    implementation networkLibraries.retrofitRxJava3Adapter

    testImplementation testLibraries.junit
    androidTestImplementation testLibraries.junitExt
    androidTestImplementation testLibraries.espresso
    androidTestImplementation testLibraries.annotations
}