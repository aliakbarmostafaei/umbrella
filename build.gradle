/*
 *     Copyright (C) 2020  Ali Akbar Mostafaei
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Affero General Public License as
 *     published by the Free Software Foundation, either version 3 of the
 *     License, or (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Affero General Public License for more details.
 *
 *     You should have received a copy of the GNU Affero General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlin_version = '1.4.10'
        config = [
                applicationId: "com.aliakbarmostafaei.umbrella",
                versionMajor : 1,
                versionMinor : 0,
                versionPatch : 0
        ]
        versions = [
                // SDK libraries
                compileSdk      : 30,
                targetSdk       : 30,
                minSdk          : 21,
                sdkBuildTools   : "30.0.2",
                // dependency injection
                dagger          : '2.29.1',
                // androidx
                appCompat       : '1.2.0',
                annotations     : "1.1.0",
                constraintLayout: '2.0.1',
                coreKtx         : '1.3.1',
                fragmentKtx     : "1.2.5",
                lifecycle       : "2.2.0",
                navigation      : "2.3.0",
                recyclerView    : "1.1.0",
                room            : '2.3.0-alpha02',
                preferenceKtx   : "1.1.1",
                // ui libraries
                material        : "1.1.0",
                // network libraries
                okhttp          : '4.9.0',
                retrofit        : "2.9.0",
                moshi           : '1.10.0',
                // reactive libraries
                rxJava          : "3.0.4",
                rxKotlin        : "3.0.0",
                rxAndroid       : "3.0.0",
                // test libraries
                espresso        : '3.3.0',
                junit           : '4.13',
                junitExt        : '1.1.2'
        ]

        essentialLibraries = [
                dagger: "com.google.dagger:dagger:${versions.dagger}"
        ]

        androidxLibraries = [
                annotations             : "androidx.annotation:annotation:${versions.annotations}",
                appCompat               : "androidx.appcompat:appcompat:${versions.appCompat}",
                constraintLayout        : "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}",
                coreKtx                 : "androidx.core:core-ktx:${versions.coreKtx}",
                fragmentKtx             : "androidx.fragment:fragment-ktx:${versions.fragmentKtx}",
                viewmodelKtx            : "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}",
                livedataKtx             : "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}",
                lifecycle               : "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}",
                viewmodelSavedState     : "androidx.lifecycle:lifecycle-viewmodel-savedstate:${versions.lifecycle}",
                lifecycleJava8          : "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}",
                navigationFragment      : "androidx.navigation:navigation-fragment-ktx:${versions.navigation}",
                navigationUi            : "androidx.navigation:navigation-ui-ktx:${versions.navigation}",
                navigationDynamicModules: "androidx.navigation:navigation-dynamic-features-fragment:${versions.navigation}",
                recyclerView            : "androidx.recyclerview:recyclerview:${versions.recyclerView}",
                room                    : "androidx.room:room-runtime:${versions.room}",
                roomRxJava3Adapter      : "androidx.room:room-rxjava3:${versions.room}",
                preferenceKtx           : "androidx.preference:preference-ktx:${versions.preferenceKtx}"
        ]

        uiLibraries = [
                material: "com.google.android.material:material:${versions.material}"
        ]

        networkLibraries = [
                okhttp                : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
                okhttpLogger          : "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}",
                retrofit              : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
                retrofitMoshiConverter: "com.squareup.retrofit2:converter-moshi:${versions.retrofit}",
                retrofitRxJava3Adapter: "com.squareup.retrofit2:adapter-rxjava3:${versions.retrofit}",
                moshi                 : "com.squareup.moshi:moshi-kotlin:${versions.moshi}",
                moshiCodegen          : "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"
        ]

        reactiveLibraries = [
                rxJava   : "io.reactivex.rxjava3:rxjava:${versions.rxJava}",
                rxKotlin : "io.reactivex.rxjava3:rxkotlin:${versions.rxKotlin}",
                rxAndroid: "io.reactivex.rxjava3:rxandroid:${versions.rxAndroid}"
        ]

        testLibraries = [
                junit      : "junit:junit:${versions.junit}",
                junitExt   : "androidx.test.ext:junit:${versions.junitExt}",
                espresso   : "androidx.test.espresso:espresso-core:${versions.espresso}",
                annotations: "androidx.annotation:annotation:${versions.annotations}"

        ]

        annotationProcessors = [
                daggerProcessor: "com.google.dagger:dagger-compiler:${versions.dagger}",
                roomProcessor  : "androidx.room:room-compiler:${versions.room}"
        ]
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.navigation}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
